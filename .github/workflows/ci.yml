name: NHD-Website CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  validate:
    name: Validate Website
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        
    - name: Install dependencies (if package.json exists)
      run: |
        if [ -f package.json ]; then
          npm ci
        else
          echo "No package.json found, skipping dependency installation"
        fi
      
    - name: Validate HTML files
      run: |
        echo "Validating HTML files..."
        find public -name "*.html" -type f | while read file; do
          echo "Validating $file"
          # Basic HTML validation (can be enhanced with html-validate or similar)
          if ! grep -q "<!DOCTYPE html>" "$file"; then
            echo "Warning: $file may not have proper DOCTYPE declaration"
          fi
        done
      
    - name: Check for broken links
      run: |
        echo "Checking for common issues..."
        find public -name "*.html" -type f -exec grep -l "href=\"#\"" {} \; | while read file; do
          echo "Warning: $file contains placeholder links"
        done
      
    - name: Validate CSS
      run: |
        echo "Validating CSS files..."
        find public -name "*.css" -type f | while read file; do
          echo "Validating $file"
          # Basic CSS validation
          if ! grep -q "{" "$file" || ! grep -q "}" "$file"; then
            echo "Warning: $file may have syntax issues"
          fi
        done
      
    - name: Check file sizes
      run: |
        echo "Checking file sizes..."
        find public -type f -size +1M | while read file; do
          echo "Warning: $file is larger than 1MB"
        done

  lighthouse:
    name: Lighthouse Performance Audit
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        
    - name: Install Lighthouse CI
      run: npm install -g @lhci/cli@0.12.x
      
    - name: Run Lighthouse CI
      run: |
        lhci autorun || echo "Lighthouse CI configuration not found"
      env:
        LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}

  deploy:
    name: Deploy to Netlify
    runs-on: ubuntu-latest
    needs: [validate]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Deploy to Netlify
      uses: nwtgck/actions-netlify@v3.0
      with:
        publish-dir: './public'
        production-branch: main
        github-token: ${{ secrets.GITHUB_TOKEN }}
        deploy-message: "Deploy from GitHub Actions"
        enable-pull-request-comment: false
        enable-commit-comment: true
        overwrites-pull-request-comment: true
      env:
        NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
        NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}

  notify:
    name: Notify Deployment Status
    runs-on: ubuntu-latest
    needs: [deploy]
    if: always()
    
    steps:
    - name: Notify on Success
      if: needs.deploy.result == 'success'
      run: |
        echo "‚úÖ NHD-Website deployed successfully to Netlify!"
        echo "üåê Website is now live and accessible"
        
    - name: Notify on Failure
      if: needs.deploy.result == 'failure'
      run: |
        echo "‚ùå NHD-Website deployment failed!"
        echo "üîç Check the logs for more details"
        exit 1
